var s = ts.scene();var r = ts.wglren({antiAlias: true}, 0xeeeeee);var ct = ts.container("id-threescript-animation", r);var mouseX = null;var mouseY = null;function onDocumentMouseMove(event) {   mouseX = (event.clientX - windowHalfX) * 10;   mouseY = (event.clientY - windowHalfY) * 10;}ct.addEventListener("mousemove", onDocumentMouseMove);var c = ts.percam(45, ct.w / ct.h, 0.1, 10000);ts.updpromat(c);ts.pos(c, 0, 0, 400);ts.onresize(ct, c, r);ts.onmouse(ct, c, 1, 2, 4);var path = "examples/adaptations/threejs/anaglyphs/pisa/";var format = '.png';var urls = [   path + 'px' + format, path + 'nx' + format,   path + 'py' + format, path + 'ny' + format,   path + 'pz' + format, path + 'nz' + format];var t = ts.loatexcub(urls);var sb = ts.sphgeo(100, 32, 16);var mb = ts.basmat({color: 0xffffff, envMap: t});var spheres = [];for (var i = 0; i < 500; i++) {   var sp = ts.mesh(sb, mb);   sp.position.set(Math.random() * 10000 - 5000, Math.random() * 10000 - 5000, Math.random() * 10000 - 5000);   sp.scale.x = sp.scale.y = sp.scale.z = Math.random() * 3 + 1;   spheres.push(sp);   ts.add(s, sp);}var effect = ts.anaeff(r);effect.setSize(ct.w || 2, ct.h || 2);ts.animate(r, s, c, null, loopCallback, effectCallback);function effectCallback(loop) {   effect.render(s, c);}function loopCallback(loop) {   var timer = 0.0001 * Date.now();   var p = c.position;   p.x += (mouseX - p.x) * .05;   p.y += (-mouseY - p.y) * .05;   ts.lookat(c,s);   for (var i = 0, il = spheres.length; i < il; i++) {      p = spheres[i].position;      p.x = 5000 * Math.cos(timer + i);      p.y = 5000 * Math.sin(timer + i * 1.1);   }}